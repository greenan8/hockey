/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/conferences": {
    /** This only retrieves active conferences. For inactive conferences, use `/conferences/{id}`. */
    get: operations["getConferences"];
  };
  "/conferences/{id}": {
    /** You can use this to also retrieve inactive conferences. For example, the ID for the World Cup of Hockey is `7`. */
    get: operations["getConference"];
  };
  "/divisions": {
    /** This only retrieves active divisions. For inactive divisions, use `/divisions/{id}`. */
    get: operations["getDivisions"];
  };
  "/divisions/{id}": {
    /** You can use this to also retrieve inactive divisions. For example, the ID for the old Patrick division is `13`. */
    get: operations["getDivision"];
  };
  "/draft": {
    get: operations["getDraft"];
  };
  "/draft/{year}": {
    get: operations["getDraftByYear"];
  };
  "/draft/prospects": {
    /** Be forewarned that this endpoint returns a **lot** of data and there does not appear to be a way to paginate results. */
    get: operations["getDraftProspects"];
  };
  "/draft/prospects/{id}": {
    get: operations["getDraftProspect"];
  };
  "/game/{id}/boxscore": {
    /** If you want detailed play information, you should use `/game/{id}/feed/live` or `/game/{id}/feed/live/diffPatch`. */
    get: operations["getGameBoxscore"];
  };
  "/game/{id}/content": {
    get: operations["getGameContent"];
  };
  "/game/{id}/feed/live": {
    /** This contains all data related to a game, from the boxscore, to play data and even on-ice coordinates. Be forewarned that, depending on the game, this endpoint can return a **lot** of data. */
    get: operations["getGame"];
  };
  "/game/{id}/feed/live/diffPatch": {
    /** You can use this to return a small subset of data relating to game. */
    get: operations["getGameDiff"];
  };
  "/people/{id}": {
    get: operations["getPlayer"];
  };
  "/people/{id}/stats": {
    get: operations["getPlayerStats"];
  };
  "/schedule": {
    get: operations["getSchedule"];
  };
  "/standings": {
    get: operations["getStandings"];
  };
  "/standings/{type}": {
    get: operations["getStandingsByType"];
  };
  "/standingsTypes": {
    get: operations["getStandingTypes"];
  };
  "/statTypes": {
    get: operations["getStatTypes"];
  };
  "/teams": {
    get: operations["getTeams"];
  };
  "/teams/{id}": {
    get: operations["getTeam"];
  };
  "/teams/{id}/roster": {
    get: operations["getTeamRoster"];
  };
  "/teams/{id}/stats": {
    get: operations["getTeamStats"];
  };
}

export interface components {
  schemas: {
    Conference: {
      /** @example 5 */
      id?: number;
      /** @enum {string} */
      name?: "Eastern" | "Western" | "World Cup of Hockey";
      /**
       * Format: uri
       * @example /api/v1/conferences/5
       */
      link?: string;
      /** @enum {string} */
      abbreviation?: "E" | "W" | "WCH";
      /** @enum {string} */
      shortName?: "East" | "West" | "WCup";
      active?: boolean;
    };
    Conferences: {
      copyright?: string;
      conferences?: components["schemas"]["Conference"][];
    };
    Division: {
      /** @example 15 */
      id?: number;
      /** @example Pacific */
      name?: string;
      /**
       * Format: uri
       * @example /api/v1/divisions/15
       */
      link?: string;
      /** @example P */
      abbreviation?: string;
      conference?: {
        /** @example 5 */
        id?: number;
        /** @example Western */
        name?: string;
        /**
         * Format: uri
         * @example /api/v1/conferences/5
         */
        link?: string;
      };
      active?: boolean;
    };
    Divisions: {
      copyright?: string;
      divisions?: components["schemas"]["Division"][];
    };
    Draft: {
      copyright?: string;
      drafts?: {
        /** @example 2017 */
        draftYear?: number;
        rounds?: {
          /** @example 1 */
          roundNumber?: number;
          /** @example 1 */
          round?: number;
          picks?: {
            /** @example 2017 */
            year?: number;
            /** @example 1 */
            round?: string;
            /** @example 1 */
            pickOverall?: number;
            /** @example 1 */
            pickInRound?: number;
            team?: {
              /** @example 1 */
              id?: number;
              /** @example New Jersey Devils */
              name?: string;
              /**
               * Format: uri
               * @example /api/v1/teams/1
               */
              link?: string;
            };
            prospect?: {
              /** @example 65242 */
              id?: number;
              /** @example Nico Hischier */
              fullName?: string;
              /**
               * Format: uri
               * @example /api/v1/draft/prospects/65242
               */
              link?: string;
            };
          }[];
        }[];
      }[];
    };
    DraftProspect: {
      /** @example 65242 */
      id?: number;
      /** @example Nico Hischier */
      fullName?: string;
      /**
       * Format: uri
       * @example /api/v1/draft/prospects/65242
       */
      link?: string;
      /** @example Nico */
      firstName?: string;
      /** @example Hischier */
      lastName?: string;
      /**
       * Format: date
       * @example 1999-01-04
       */
      birthDate?: string;
      /** @example Naters */
      birthCity?: string;
      /** @example CHE */
      birthCountry?: string;
      /** @example CHE */
      nationality?: string;
      /** @example 6' 2" */
      height?: string;
      /** @example 179 */
      weight?: number;
      /** @example L */
      shootsCatches?: string;
      primaryPosition?: {
        /** @example C */
        code?: string;
        /** @example Center */
        name?: string;
        /** @example Forward */
        type?: string;
        /** @example C */
        abbreviation?: string;
      };
      prospectCategory?: {
        /** @example 1 */
        id?: number;
        /** @example NA Skater */
        shortName?: string;
        /** @example North American Skater */
        name?: string;
      };
      amateurTeam?: {
        /**
         * Format: uri
         * @example /api/v1/teams/null
         */
        link?: string;
      };
      amateurLeague?: {
        /**
         * Format: uri
         * @example /api/v1/league/null
         */
        link?: string;
      };
      ranks?: { [key: string]: unknown };
    };
    DraftProspects: {
      copyright?: string;
      prospects?: components["schemas"]["DraftProspect"][];
    };
    Error: {
      /** @example 10 */
      messageNumber?: number;
      /** @example Object not found */
      message?: string;
    };
    Franchise: {
      /** @example 29 */
      id?: number;
      /** @example Sharks */
      name?: string;
      /**
       * Format: uri
       * @example /api/v1/franchises/29
       */
      link?: string;
    };
    Game: {
      copyright?: string;
      /** @example 2017020851 */
      gamePk?: number;
      /**
       * Format: uri
       * @example /api/v1/game/2017020851/feed/live
       */
      link?: string;
      metaData?: {
        /** @example 10 */
        wait?: number;
        /** @example 20180211_054345 */
        timeStamp?: string;
      };
      gameData?: {
        game?: {
          /** @example 2017020851 */
          pk?: number;
          /** @example 20172018 */
          season?: string;
          /** @example R */
          type?: string;
        };
        datetime?: {
          /**
           * Format: date-time
           * @example 2018-02-11T03:00:00Z
           */
          dateTime?: string;
          /**
           * Format: date-time
           * @example 2018-02-11T05:30:42Z
           */
          endDateTime?: string;
        };
        status?: {
          /** @example Final */
          abstractGameState?: string;
          /** @example 7 */
          codedGameState?: string;
          /** @example Final */
          detailedState?: string;
          /** @example 7 */
          statusCode?: string;
          startTimeTBD?: boolean;
        };
        teams?: {
          away?: components["schemas"]["Team"];
          home?: components["schemas"]["Team"];
        };
        players?: components["schemas"]["Player"];
        venue?: {
          /** @example SAP Center at San Jose */
          name?: string;
          /**
           * Format: uri
           * @example /api/v1/venues/null
           */
          link?: string;
        };
      };
      liveData?: {
        plays?: {
          allPlays?: components["schemas"]["GamePlay"][];
          scoringPlays?: number[];
          penaltyPlays?: number[];
          playsByPeriod?: {
            startIndex?: number;
            plays?: number[];
            /** @example 114 */
            endIndex?: number;
          }[];
          currentPlay?: components["schemas"]["GamePlay"];
        };
        linescore?: components["schemas"]["GameLinescore"];
        boxscore?: components["schemas"]["GameBoxscore"];
        decisions?: {
          winner?: components["schemas"]["GameDecisionPlayer"];
          loser?: components["schemas"]["GameDecisionPlayer"];
          firstStar?: components["schemas"]["GameDecisionPlayer"];
          secondStar?: components["schemas"]["GameDecisionPlayer"];
          thirdStar?: components["schemas"]["GameDecisionPlayer"];
        };
      };
    };
    GameBoxscore: {
      teams?: {
        away?: components["schemas"]["GameBoxscoreTeam"];
        home?: components["schemas"]["GameBoxscoreTeam"];
      };
      officials?: components["schemas"]["GameOfficial"][];
    };
    GameBoxscores: {
      copyright?: string;
    } & components["schemas"]["GameBoxscore"];
    GameBoxscoreTeam: {
      team?: {
        /** @example 28 */
        id?: number;
        /** @example San Jose Sharks */
        name?: string;
        /**
         * Format: uri
         * @example /api/v1/teams/28
         */
        link?: string;
        /** @example SJS */
        abbreviation?: string;
        /** @example SJS */
        triCode?: string;
      };
      teamStats?: {
        teamSkaterStats?: {
          /** @example 6 */
          goals?: number;
          /** @example 6 */
          pim?: number;
          /** @example 30 */
          shots?: number;
          /** @example 0.0 */
          powerPlayPercentage?: string;
          powerPlayGoals?: number;
          /** @example 1 */
          powerPlayOpportunities?: number;
          /** @example 59.3 */
          faceOffWinPercentage?: string;
          /** @example 21 */
          blocked?: number;
          /** @example 9 */
          takeaways?: number;
          /** @example 6 */
          giveaways?: number;
          /** @example 15 */
          hits?: number;
        };
      };
      players?: {
        person?: {
          /** @example 8471709 */
          id?: number;
          /** @example Marc-Edouard Vlasic */
          fullName?: string;
          /**
           * Format: uri
           * @example /api/v1/people/8471709
           */
          link?: string;
          /** @example L */
          shootsCatches?: string;
          /** @example Y */
          rosterStatus?: string;
        };
        /** @example 44 */
        jerseyNumber?: string;
        position?: {
          /** @example D */
          code?: string;
          /** @example Defenseman */
          name?: string;
          /** @example Defenseman */
          type?: string;
          /** @example D */
          abbreviation?: string;
        };
        stats?: {
          skaterStats?: {
            /** @example 23:04 */
            timeOnIce?: string;
            assists?: number;
            goals?: number;
            /** @example 2 */
            shots?: number;
            hits?: number;
            powerPlayGoals?: number;
            powerPlayAssists?: number;
            penaltyMinutes?: number;
            faceOffWins?: number;
            faceoffTaken?: number;
            takeaways?: number;
            /** @example 1 */
            giveaways?: number;
            shortHandedGoals?: number;
            shortHandedAssists?: number;
            blocked?: number;
            /** @example 1 */
            plusMinus?: number;
            /** @example 18:12 */
            evenTimeOnIce?: string;
            /** @example 1:07 */
            powerPlayTimeOnIce?: string;
            /** @example 3:45 */
            shortHandedTimeOnIce?: string;
          };
        };
      };
      goalies?: number[];
      skaters?: number[];
      onIce?: number[];
      onIcePlus?: {
        /** @example 8477180 */
        playerId?: number;
        /** @example 458 */
        shiftDuration?: number;
        /** @example 33 */
        stamina?: number;
      }[];
      scratches?: number[];
      penaltyBox?: number[];
      coaches?: {
        person?: {
          /** @example Peter DeBoer */
          fullName?: string;
          /**
           * Format: uri
           * @example /api/v1/people/null
           */
          link?: string;
        };
        position?: {
          /** @example HC */
          code?: string;
          /** @example Head Coach */
          name?: string;
          /** @example Head Coach */
          type?: string;
          /** @example Head Coach */
          abbreviation?: string;
        };
      }[];
    };
    GameContent: {
      copyright?: string;
      /**
       * Format: uri
       * @example /api/v1/game/2017020851/content
       */
      link?: string;
      editorial?: {
        preview?: components["schemas"]["GameEditorials"];
        articles?: components["schemas"]["GameEditorials"];
        recap?: components["schemas"]["GameEditorials"];
      };
      media?: {
        epg?: (Partial<components["schemas"]["GameMediaNHLTV"]> &
          Partial<components["schemas"]["GameMediaAudio"]> &
          Partial<components["schemas"]["GameHighlightType"]>)[];
        milestones?: {
          /** @enum {string} */
          title?: "Milestones";
          /**
           * Format: date-time
           * @example 2018-02-11T03:04:32+0000
           */
          streamStart?: string;
          items?: {
            /** @example Broadcast Start */
            title?: string;
            /** @example Broadcast Start */
            description?: string;
            /** @enum {string} */
            type?:
              | "BROADCAST_START"
              | "BROADCAST_END"
              | "GOAL"
              | "PERIOD_END"
              | "PERIOD_START"
              | "SHOT";
            /**
             * Format: date-time
             * @example 2018-02-11T03:04:36+0000
             */
            timeAbsolute?: string;
            /** @example 4 */
            timeOffset?: string;
            /** @example 1 */
            period?: string;
            /** @example 10 */
            statsEventId?: string;
            /** @example 28 */
            teamId?: string;
            /** @example 8477046 */
            playerId?: string;
            /** @example 01:15 */
            periodTime?: string;
            /** @example 1st */
            ordinalNum?: string;
            highlight?: components["schemas"]["GameHighlight"];
          }[];
        };
      };
      highlights?: {
        scoreboard?: components["schemas"]["GameHighlights"];
        gameCenter?: components["schemas"]["GameHighlights"];
      };
    };
    GameEditorial: {
      /** @example article */
      type?: string;
      /** @example A */
      state?: string;
      /**
       * Format: date-time
       * @example 2018-02-10T16:57:06-0500
       */
      date?: string;
      /** @example 295823824 */
      id?: string;
      /** @example Oilers at Sharks preview */
      headline?: string;
      /** @example Backups Montoya, Dell to start for Edmonton, San Jose */
      subhead?: string;
      /** @example Edmonton Oilers San Jose Sharks game preview */
      seoTitle?: string;
      /** @example Backup goaltender Aaron Dell will make his 19th start of the season when the San Jose Sharks play the Edmonton Oilers at SAP Center on Saturday in the first of back-to-back games. */
      seoDescription?: string;
      /** @example Game preview, Edmonton Oilers, San Jose Sharks, Aaron Dell, Al Montoya, Feb 10 */
      seoKeywords?: string;
      /** @example edmonton-oilers-san-jose-sharks-game-preview */
      slug?: string;
      commenting?: boolean;
      tagline?: string;
      tokenData?: {
        /** @example token-EBDA2F0039BF4445D2C91 */
        tokenGUID?: string;
        /** @enum {string} */
        type?: "hyperLink" | "playerCard";
        /** @example 8471709 */
        id?: string;
        /** @example 28 */
        teamId?: string;
        /** @example Marc-Edouard Vlasic */
        name?: string;
        /** @example marc-edouard-vlasic */
        seoName?: string;
        /** @example https://www.nhl.com/player/keegan-lowe-8476397?season=20172018 */
        href?: string;
        /** @example https://www.nhl.com/player/keegan-lowe-8476397?season=20172018 */
        hrefMobile?: string;
      };
      contributor?: {
        contributors?: {
          /** @example Eric Gilmore */
          name?: string;
          twitter?: string;
        }[];
        /** @example NHL.com Correspondent */
        source?: string;
      };
      keywordsDisplay?: components["schemas"]["GameEditorialKeyword"][];
      keywordsAll?: components["schemas"]["GameEditorialKeyword"][];
      approval?: string;
      /** @example /news/edmonton-oilers-san-jose-sharks-game-preview/c-295823824?game_pk=2017020851 */
      url?: string;
      /** @example /nhl/id/v1/295823824/details/web-v1.json */
      dataURI?: string;
      primaryKeyword?: components["schemas"]["GameEditorialKeyword"];
      media?: {
        /** @example photo */
        type?: string;
        image?: components["schemas"]["Photo"];
      };
      /**
       * Format: html
       * @example <p><b>OILERS (23-26-4) at SHARKS (28-18-8)</b></p><p><b>10 p.m. ET; NBCSCA, CITY, SN360, SN, NHL.TV</b></p><p>&nbsp;</p><h5><b>The Game</b></h5><p>Backup goaltender <span class="token token-playerCard" id="token-B36CCB71E81996298E792">Aaron Dell</span> will make his 19th start of the season when the San Jose Sharks play the Edmonton Oilers at SAP Center on Saturday in the first of back-to-back games.</p>
       */
      preview?: string;
    };
    GameEditorialKeyword: {
      /** @enum {string} */
      type?:
        | "bodyParagraphCount"
        | "bodyWordCount"
        | "clob_autoTagSkip_playerCards"
        | "content"
        | "embeddable"
        | "gameId"
        | "language"
        | "playerId"
        | "previewParagraphCount"
        | "primaryTag"
        | "previewWordCount"
        | "shareable"
        | "statsEventId"
        | "teamFileCode"
        | "teamId";
      /** @example en */
      value?: string;
      /** @example English */
      displayName?: string;
    };
    GameEditorials: {
      /** @example Preview */
      title?: string;
      topicList?: string;
      items?: components["schemas"]["GameEditorial"][];
    };
    GameHighlight: {
      /** @enum {string} */
      type?: "video";
      /** @example 57602103 */
      id?: string;
      /**
       * Format: date-time
       * @example 2018-02-10T22:00:00-0500
       */
      date?: string;
      /** @example Goodrow buries Hansen's pass */
      title?: string;
      /** @example EDM@SJS: Goodrow snaps Hansen's pass by Montoya */
      blurb?: string;
      /** @example Barclay Goodrow takes a drop pass from Jannik Hansen and whips a quick wrist shot past Al Montoya to give the Sharks a 3-0 lead in the 2nd */
      description?: string;
      /** @example 00:51 */
      duration?: string;
      authFlow?: boolean;
      /** @example 57602103 */
      mediaPlaybackId?: string;
      /** @example MEDIA_ARCHIVE */
      mediaState?: string;
      keywords?: components["schemas"]["GameEditorialKeyword"][];
      image?: components["schemas"]["Photo"];
      playbacks?: {
        /** @enum {string} */
        name?:
          | "FLASH_192K_320X180"
          | "FLASH_450K_400X224"
          | "FLASH_1200K_640X360"
          | "FLASH_1800K_960X540"
          | "HTTP_CLOUD_MOBILE"
          | "HTTP_CLOUD_TABLET"
          | "HTTP_CLOUD_TABLET_60"
          | "HTTP_CLOUD_WIRED"
          | "HTTP_CLOUD_WIRED_60"
          | "HTTP_CLOUD_WIRED_WEB";
        /** @example 960 */
        width?: string;
        /** @example 540 */
        height?: string;
        /**
         * Format: video
         * @example http://md-akc.med.nhl.com/mp4/nhl/2018/02/11/ddec1fcc-3772-4769-a547-314de76c6c11/1518322152840/asset_1800k.mp4
         */
        url?: string;
      }[];
    };
    GameHighlights: {
      scoreboard?: components["schemas"]["GameHighlightType"];
      gameCenter?: components["schemas"]["GameHighlightType"];
    };
    GameHighlightType: {
      /** @example Highlights */
      title?: string;
      /** @example 293642378 */
      topicList?: string;
      items?: components["schemas"]["GameHighlight"][];
    };
    GamePeriod: {
      /** @example REGULAR */
      periodType?: string;
      /**
       * Format: date-time
       * @example 2018-02-11T03:09:50Z
       */
      startTime?: string;
      /**
       * Format: date-time
       * @example 2018-02-11T03:44:47Z
       */
      endTime?: string;
      /** @example 1 */
      num?: number;
      /** @example 1st */
      ordinalNum?: string;
      home?: {
        /** @example 2 */
        goals?: number;
        /** @example 14 */
        shotsOnGoal?: number;
        /** @example left */
        rinkSide?: string;
      };
      away?: {
        goals?: number;
        /** @example 9 */
        shotsOnGoal?: number;
        /** @example right */
        rinkSide?: string;
      };
    };
    GameDecisionPlayer: {
      /** @example 8477180 */
      id?: number;
      /** @example Aaron Dell */
      fullName?: string;
      /**
       * Format: uri
       * @example /api/v1/people/8477180
       */
      link?: string;
    };
    GameLinescore: {
      /** @example 3 */
      currentPeriod?: number;
      /** @example 3rd */
      currentPeriodOrdinal?: string;
      /** @example Final */
      currentPeriodTimeRemaining?: string;
      periods?: components["schemas"]["GamePeriod"][];
      shootoutInfo?: {
        away?: {
          scores?: number;
          attempts?: number;
        };
        home?: {
          scores?: number;
          attempts?: number;
        };
      };
      teams?: {
        home?: components["schemas"]["GameLinescoreTeam"];
        away?: components["schemas"]["GameLinescoreTeam"];
      };
      /** @example Even */
      powerPlayStrength?: string;
      hasShootout?: boolean;
      intermissionInfo?: {
        intermissionTimeRemaining?: number;
        intermissionTimeElapsed?: number;
        inIntermission?: boolean;
      };
      powerPlayInfo?: {
        situationTimeRemaining?: number;
        /** @example 72 */
        situationTimeElapsed?: number;
        inSituation?: boolean;
      };
    };
    GameLinescoreTeam: {
      team?: {
        /** @example 28 */
        id?: number;
        /** @example San Jose Sharks */
        name?: string;
        /**
         * Format: uri
         * @example /api/v1/teams/28
         */
        link?: string;
        /** @example SJS */
        abbreviation?: string;
        /** @example SJS */
        triCode?: string;
      };
      /** @example 6 */
      goals?: number;
      /** @example 30 */
      shotsOnGoal?: number;
      goaliePulled?: boolean;
      /** @example 5 */
      numSkaters?: number;
      powerPlay?: boolean;
    };
    GameMediaAudio: {
      /** @example Audio */
      title?: string;
      items?: {
        /** @example MEDIA_DONE */
        mediaState?: string;
        /** @example 57463903 */
        mediaPlaybackId?: string;
        /** @example HOME */
        mediaFeedType?: string;
        /** @example KFOX */
        callLetters?: string;
        /** @example 221-1007449 */
        eventId?: string;
        /** @example eng */
        language?: string;
        freeGame?: boolean;
        feedName?: string;
        gamePlus?: boolean;
      }[];
    };
    GameMediaNHLTV: {
      /** @example NHLTV */
      title?: string;
      /** @example web */
      platform?: string;
      items?: {
        /** @example dbb39fa8-6679-4b22-a8c5-71eb5e39b462 */
        guid?: string;
        /** @example MEDIA_ARCHIVE */
        mediaState?: string;
        /** @example 57463703 */
        mediaPlaybackId?: string;
        /** @example HOME */
        mediaFeedType?: string;
        /** @example NBCS-CA */
        callLetters?: string;
        /** @example 221-1007449 */
        eventId?: string;
        /** @example eng */
        language?: string;
        freeGame?: boolean;
        feedName?: string;
        gamePlus?: boolean;
      }[];
    };
    GameOfficial: {
      official?: {
        /** @example 2071 */
        id?: number;
        /** @example Tim Peel */
        fullName?: string;
        /**
         * Format: uri
         * @example /api/v1/people/2071
         */
        link?: string;
      };
      /** @enum {string} */
      officialType?: "Linesman" | "Referee";
    };
    GamePlay: {
      players?: {
        player?: {
          /** @example 8476881 */
          id?: number;
          /** @example Tomas Hertl */
          fullName?: string;
          /**
           * Format: uri
           * @example /api/v1/people/8476881
           */
          link?: string;
        };
        /** @example Winner */
        playerType?: string;
      }[];
      result?: {
        /** @example Game End */
        event?: string;
        /** @example SJS505 */
        eventCode?: string;
        /** @example GAME_END */
        eventTypeId?: string;
        /** @example Game End */
        description?: string;
      };
      about?: {
        /** @example 315 */
        eventIdx?: number;
        /** @example 505 */
        eventId?: number;
        /** @example 3 */
        period?: number;
        /** @example REGULAR */
        periodType?: string;
        /** @example 3rd */
        ordinalNum?: string;
        /** @example 20:00 */
        periodTime?: string;
        /** @example 00:00 */
        periodTimeRemaining?: string;
        /**
         * Format: date-time
         * @example 2018-02-11T05:30:42Z
         */
        dateTime?: string;
        goals?: {
          /** @example 4 */
          away?: number;
          /** @example 6 */
          home?: number;
        };
      };
      coordinates?: {
        x?: number;
        y?: number;
      };
      team?: {
        /** @example 28 */
        id?: number;
        /** @example San Jose Sharks */
        name?: string;
        /**
         * Format: uri
         * @example /api/v1/teams/28
         */
        link?: string;
        /** @example SJS */
        triCode?: string;
      };
    };
    Photo: {
      title?: string;
      altText?: string;
      cuts?: {
        /** @example 16:9 */
        aspectRatio?: string;
        /** @example 2568 */
        width?: number;
        /** @example 1444 */
        height?: number;
        /**
         * Format: url
         * @example https://nhl.bamcontent.com/images/photos/295824704/2568x1444/cut.jpg
         */
        src?: string;
        /**
         * Format: url
         * @example https://nhl.bamcontent.com/images/photos/295824704/2568x1444/cut.jpg
         */
        at2x?: string;
        /**
         * Format: url
         * @example https://nhl.bamcontent.com/images/photos/295824704/2568x1444/cut.jpg
         */
        at3x?: string;
      };
    };
    Player: {
      /** @example 8466138 */
      id?: number;
      /** @example Joe Thornton */
      fullName?: string;
      /**
       * Format: uri
       * @example /api/v1/people/8466138
       */
      link?: string;
      /** @example Joe */
      firstName?: string;
      /** @example Thornton */
      lastName?: string;
      /** @example 19 */
      primaryNumber?: string;
      /**
       * Format: date
       * @example 1979-07-02
       */
      birthDate?: string;
      /** @example 38 */
      currentAge?: number;
      /** @example London */
      birthCity?: string;
      /** @example ON */
      birthStateProvince?: string;
      /** @example CAN */
      birthCountry?: string;
      /** @example CAN */
      nationality?: string;
      /** @example 6' 4" */
      height?: string;
      /** @example 220 */
      weight?: number;
      active?: boolean;
      alternateCaptain?: boolean;
      captain?: boolean;
      rookie?: boolean;
      /** @enum {string} */
      shootsCatches?: "L" | "R";
      /** @example I */
      rosterStatus?: string;
      currentTeam?: {
        /** @example 28 */
        id?: number;
        /** @example San Jose Sharks */
        name?: string;
        /**
         * Format: uri
         * @example /api/v1/teams/28
         */
        link?: string;
      };
      primaryPosition?: {
        /** @example C */
        code?: string;
        /** @example Center */
        name?: string;
        /** @example Forward */
        type?: string;
        /** @example C */
        abbreviation?: string;
      };
    };
    Players: {
      copyright: string;
      teams?: components["schemas"]["Player"][];
    } & {
      people: unknown;
    };
    PlayerStats: {
      copyright?: string;
      stats?: {
        type?: {
          /** @enum {string} */
          displayName?:
            | "byDayOfWeek"
            | "byMonth"
            | "goalsByGameSituation"
            | "homeAndAway"
            | "onPaceRegularSeason"
            | "regularSeasonStatRankings"
            | "statsSingleSeason"
            | "vsConference"
            | "vsDivision"
            | "vsTeam"
            | "winLoss";
        };
        splits?: {
          /** @example 20172018 */
          season?: string;
          stat?: {
            /** @example 862:13 */
            timeOnIce?: string;
            /** @example 23 */
            assists?: string;
            /** @example 13 */
            goals?: number;
            /** @example 38 */
            pim?: number;
            /** @example 75 */
            shots?: number;
            /** @example 47 */
            games?: number;
            /** @example 32 */
            hits?: number;
            /** @example 7 */
            powerPlayGoals?: number;
            /** @example 18 */
            powerPlayPoints?: number;
            /** @example 168:28 */
            powerPlayTimeOnIce?: number;
            /** @example 692:50 */
            evenTimeOnIce?: number;
            /** @example 38 */
            penaltyMinutes?: number;
            /**
             * Format: double
             * @example 52.04
             */
            faceOffPct?: number;
            /**
             * Format: float
             * @example 17.3
             */
            shotPct?: number;
            /** @example 1 */
            gameWinningGoals?: number;
            overTimeGoals?: number;
            shortHandedGoals?: number;
            shortHandedPoints?: number;
            /** @example 00:55 */
            shortHandedTimeOnIce?: string;
            /** @example 18 */
            blocked?: number;
            /** @example -9 */
            plusMinus?: number;
            /** @example 36 */
            points?: number;
            /** @example 1077 */
            shifts?: number;
            /** @example 18:20 */
            timeOnIcePerGame?: string;
            /** @example 14:44 */
            evenTimeOnIcePerGame?: string;
            /** @example 00:01 */
            shortHandedTimeOnIcePerGame?: string;
            /** @example 03:35 */
            powerPlayTimeOnIcePerGame?: string;
            /** @example 1st */
            rankPowerPlayGoals?: string;
            /** @example 405th */
            rankBlockedShots?: string;
            /** @example 51st */
            rankAssists?: string;
            /** @example 246th */
            rankShotPct?: string;
            /** @example 13th */
            rankGoals?: string;
            /** @example 19th */
            rankHits?: string;
            /** @example 111th */
            rankPenaltyMinutes?: string;
            /** @example 133rd */
            rankShortHandedGoals?: string;
            /** @example 176th */
            rankPlusMinus?: string;
            /** @example 2nd */
            rankShots?: string;
            /** @example 20th */
            rankPoints?: string;
            /** @example 9th */
            rankOvertimeGoals?: string;
            /** @example 1st */
            rankGamesPlayed?: string;
            /** @example 6 */
            goalsInFirstPeriod?: number;
            /** @example 3 */
            goalsInSecondPeriod?: number;
            /** @example 4 */
            goalsInThirdPeriod?: number;
            /** @example 2 */
            goalsTrailingByOne?: number;
            /** @example 1 */
            goalsTrailingByTwo?: number;
            /** @example 1 */
            goalsTrailingByThreePlus?: number;
            /** @example 4 */
            goalsWhenTied?: number;
            /** @example 2 */
            goalsLeadingByOne?: number;
            /** @example 3 */
            goalsLeadingByTwo?: number;
          };
          isHome?: boolean;
          isWin?: boolean;
          isOT?: boolean;
          /** @example 1 */
          month?: number;
          /** @example 1 */
          dayOfWeek?: number;
          opponent?: {
            /** @example 1 */
            id?: number;
            /** @example New Jersey Devils */
            name?: string;
            /**
             * Format: uri
             * @example /api/v1/teams/1
             */
            link?: string;
          };
          opponentDivision?: {
            /** @example 16 */
            id?: number;
            /** @example Central */
            name?: string;
            /**
             * Format: uri
             * @example /api/v1/divisions/16
             */
            link?: string;
          };
          opponentConference?: {
            /** @example 5 */
            id?: number;
            /** @example Western */
            name?: string;
            /**
             * Format: uri
             * @example /api/v1/conferences/5
             */
            link?: string;
          };
        }[];
      }[];
    };
    Roster: {
      person?: {
        /** @example 8466138 */
        id?: number;
        /** @example Joe Thornton */
        fullName?: string;
        /**
         * Format: uri
         * @example /api/v1/people/8466138
         */
        link?: string;
      };
      /** @example 19 */
      jerseyNumber?: number;
      position?: {
        /** @example C */
        code?: string;
        /** @example Center */
        name?: string;
        /** @example Forward */
        type?: string;
        /** @example C */
        abbreviation?: string;
      };
    };
    Rosters: {
      copyright?: string;
      teams?: components["schemas"]["Roster"][];
    };
    Schedule: {
      copyright?: string;
      /** @example 9 */
      totalItems?: number;
      totalEvents?: number;
      /** @example 9 */
      totalGames?: number;
      totalMatches?: number;
      /** @example 10 */
      wait?: number;
      dates?: components["schemas"]["ScheduleDay"][];
    };
    ScheduleDay: {
      /**
       * Format: date
       * @example 2018-02-10
       */
      date?: string;
      /** @example 9 */
      totalItems?: number;
      totalEvents?: number;
      /** @example 9 */
      totalGames?: number;
      totalMatches?: number;
      games?: components["schemas"]["ScheduleGame"][];
      events?: { [key: string]: unknown }[];
      matches?: { [key: string]: unknown }[];
    };
    ScheduleGame: {
      /** @example 2017020851 */
      gamePk?: number;
      /**
       * Format: uri
       * @example /api/v1/game/2017020851/feed/live
       */
      link?: string;
      /** @example R */
      gameType?: string;
      /** @example 20172018 */
      season?: string;
      /**
       * Format: date-time
       * @example 2018-02-11T03:00:00Z
       */
      gameDate?: string;
      status?: {
        /** @example Final */
        abstractGameState?: string;
        /** @example 7 */
        codedGameState?: string;
        /** @example Final */
        detailedState?: string;
        /** @example 7 */
        statusCode?: string;
        startTimeTBD?: boolean;
      };
      teams?: {
        away?: {
          leagueRecord?: {
            /** @example 23 */
            wins?: number;
            /** @example 27 */
            losses?: number;
            /** @example 4 */
            ot?: number;
            /** @example league */
            type?: string;
          };
          /** @example 4 */
          score?: number;
          team?: {
            /** @example 22 */
            id?: number;
            /** @example Edmonton Oilers */
            name?: string;
            /** @example /api/v1/teams/22 */
            link?: string;
          };
        };
        home?: {
          leagueRecord?: {
            /** @example 29 */
            wins?: number;
            /** @example 18 */
            losses?: number;
            /** @example 8 */
            ot?: number;
            /** @example league */
            type?: string;
          };
          /** @example 6 */
          score?: number;
          team?: {
            /** @example 28 */
            id?: number;
            /** @example San Jose Sharks */
            name?: string;
            /**
             * Format: uri
             * @example /api/v1/teams/28
             */
            link?: string;
          };
        };
      };
      linescore?: components["schemas"]["GameLinescore"];
      venue?: {
        /** @example SAP Center at San Jose */
        name?: string;
        /**
         * Format: uri
         * @example /api/v1/venues/null
         */
        link?: string;
      };
      tickets?: {
        /** @enum {string} */
        ticketType?:
          | "buysell"
          | "club buysell"
          | "club mobile"
          | "club mobile buysell"
          | "club ticket"
          | "mobile app ticket"
          | "mobile buysell"
          | "mobile ticket"
          | "tablet app ticket"
          | "ticket";
        /**
         * Format: url
         * @example http://www.ticketmaster.com/event/090052DD92E620B4?BRAND=ducks&extcmp=tm208344&utm_source=NHL.com&utm_medium=client&utm_campaign=NHL_LEAGUE_ANA&utm_content=SCHEDULE_PAGE&camefrom=CFC_DUCKS_1718_Web_DucksSchedule
         */
        ticketLink?: string;
      }[];
      content?: {
        /**
         * Format: uri
         * @example /api/v1/game/2017020851/content
         */
        link?: string;
      };
    };
    Standings: {
      copyright?: string;
      records?: {
        /** @enum {string} */
        standingsType?: "regularSeason";
        league?: {
          /** @example 133 */
          id?: number;
          /** @example National Hockey League */
          name?: string;
          /**
           * Format: uri
           * @example /api/v1/league/133
           */
          link?: string;
        };
        division?: {
          /** @example 15 */
          id?: number;
          /** @example Pacific */
          name?: string;
          /**
           * Format: uri
           * @example /api/v1/divisions/15
           */
          link?: string;
        };
        conference?: {
          /** @example 5 */
          id?: number;
          /** @example Western */
          name?: string;
          /**
           * Format: uri
           * @example /api/v1/conferences/5
           */
          link?: string;
        };
        teamRecords?: {
          team?: {
            /** @example 28 */
            id?: number;
            /** @example San Jose Sharks */
            name?: string;
            /**
             * Format: uri
             * @example /api/v1/teams/28
             */
            link?: string;
          };
          leagueRecord?: {
            /** @example 29 */
            wins?: number;
            /** @example 18 */
            losses?: number;
            /** @example 8 */
            ot?: number;
            /** @example league */
            type?: string;
          };
          /** @example 154 */
          goalsAgainst?: number;
          /** @example 162 */
          goalsScored?: number;
          /** @example 66 */
          points?: number;
          /** @example 2 */
          divisionRank?: string;
          /** @example 7 */
          conferenceRank?: string;
          /** @example 11 */
          leagueRank?: string;
          /** @example 0 */
          wildCardRank?: string;
          /** @example 26 */
          row?: number;
          /** @example 55 */
          gamesPlayed?: number;
          streak?: {
            /** @example wins */
            streakType?: string;
            /** @example 1 */
            streakNumber?: number;
            /** @example W1 */
            streakCode?: string;
          };
          /**
           * Format: date-time
           * @example 2018-02-11T00:57:18Z
           */
          lastUpdated?: string;
        }[];
      }[];
    };
    StandingTypes: {
      /** @example regularSeason */
      name?: string;
      /** @example Regular Season Standings */
      description?: string;
    }[];
    StatTypes: {
      /** @enum {string} */
      displayName?:
        | "byDayOfWeek"
        | "byDayOfWeekPlayoffs"
        | "byMonth"
        | "byMonthPlayoffs"
        | "careerPlayoffs"
        | "careerRegularSeason"
        | "gameLog"
        | "goalsByGameSituation"
        | "goalsByGameSituationPlayoffs"
        | "homeAndAway"
        | "homeAndAwayPlayoffs"
        | "onPaceRegularSeason"
        | "playoffGameLog"
        | "playoffStatRankings"
        | "regularSeasonStatRankings"
        | "statsSingleSeason"
        | "statsSingleSeasonPlayoffs"
        | "vsConference"
        | "vsConferencePlayoffs"
        | "vsDivision"
        | "vsDivisionPlayoffs"
        | "vsTeam"
        | "vsTeamPlayoffs"
        | "winLoss"
        | "winLossPlayoffs"
        | "yearByYear"
        | "yearByYearPlayoffs"
        | "yearByYearPlayoffsRank"
        | "yearByYearRank";
    }[];
    Team: {
      /** @example 28 */
      id?: number;
      /** @example San Jose Sharks */
      name?: string;
      /**
       * Format: uri
       * @example /api/v1/teams/28
       */
      link?: string;
      venue?: components["schemas"]["Venue"];
      /** @example SJS */
      abbreviation?: string;
      /** @example SJS */
      triCode?: string;
      /** @example Sharks */
      teamName?: string;
      /** @example San Jose */
      locationName?: string;
      /** @example 1990 */
      firstYearOfPlay?: number;
      division?: {
        /** @example 15 */
        id?: number;
        /** @example Pacific */
        name?: string;
        /**
         * Format: uri
         * @example /api/v1/divisions/15
         */
        link?: string;
      };
      conference?: {
        /** @example 5 */
        id?: number;
        /** @example Western */
        name?: string;
        /**
         * Format: uri
         * @example /api/v1/conferences/5
         */
        link?: string;
      };
      franchise?: components["schemas"]["Franchise"];
      roster?: {
        roster?: components["schemas"]["Roster"][];
      };
      nextGameSchedule?: {
        /** @example 1 */
        totalItems?: number;
        totalEvents?: number;
        /** @example 1 */
        totalGames?: number;
        totalMatches?: number;
        dates?: {
          /**
           * Format: date
           * @example 2018-02-10
           */
          date?: string;
          /** @example 1 */
          totalItems?: number;
          totalEvents?: number;
          /** @example 1 */
          totalGames?: number;
          totalMatches?: number;
          games?: {
            /** @example 2017020851 */
            gamePk?: number;
            /**
             * Format: uri
             * @example /api/v1/game/2017020851/feed/live
             */
            link?: string;
            /** @example R */
            gameType?: string;
            /** @example 20172018 */
            season?: string;
            /**
             * Format: date-time
             * @example 2018-02-11T03:00:00Z
             */
            gameDate?: string;
            status?: {
              /** @enum {string} */
              abstractGameState?: "Live" | "Preview";
              /**
               * @example 3
               * @enum {string}
               */
              codedGameState?: "2" | "3";
              /** @enum {string} */
              detailedState?: "In Progress" | "Pre-Game";
              /** @enum {string} */
              statusCode?: "2" | "3";
              startTimeTBD?: boolean;
            };
            teams?: {
              away?: {
                leagueRecord?: {
                  /** @example 23 */
                  wins?: number;
                  /** @example 26 */
                  losses?: number;
                  /** @example 4 */
                  ot?: number;
                  /** @example league */
                  type?: string;
                };
                score?: number;
                team?: {
                  /** @example 22 */
                  id?: number;
                  /** @example Edmonton Oilers */
                  name?: string;
                  /**
                   * Format: uri
                   * @example /api/v1/teams/22
                   */
                  link?: string;
                };
              };
              home?: {
                leagueRecord?: {
                  /** @example 28 */
                  wins?: number;
                  /** @example 18 */
                  losses?: number;
                  /** @example 8 */
                  ot?: number;
                  /** @example league */
                  type?: string;
                };
                /** @example 2 */
                score?: number;
                team?: {
                  /** @example 28 */
                  id?: number;
                  /** @example San Jose Sharks */
                  name?: string;
                  /**
                   * Format: uri
                   * @example /api/v1/teams/28
                   */
                  link?: string;
                };
              };
            };
            venue?: {
              /** @example SAP Center at San Jose */
              name?: string;
              /**
               * Format: uri
               * @example /api/v1/venues/null
               */
              link?: string;
            };
            content?: {
              /**
               * Format: uri
               * @example /api/v1/game/2017020851/content
               */
              link?: string;
            };
          }[];
          events?: { [key: string]: unknown }[];
          matches?: { [key: string]: unknown }[];
        }[];
      };
      /** @example San Jose */
      shortName?: string;
      /**
       * Format: url
       * @example http://www.sjsharks.com
       */
      officialSiteUrl?: string;
      /** @example 29 */
      franchiseId?: number;
      active?: boolean;
    };
    Teams: {
      copyright?: string;
      teams?: components["schemas"]["Team"][];
    };
    TeamStats: {
      copyright?: string;
      stats?: {
        type?: {
          /** @example statsSingleSeason */
          displayName?: string;
        };
        splits?: {
          stat?: {
            /** @example 55 */
            gamesPlayed?: number;
            /** @example 29 */
            wins?: number;
            /** @example 18 */
            losses?: number;
            /** @example 8 */
            ot?: number;
            /** @example 66 */
            pts?: number;
            /** @example 60.0 */
            ptPctg?: string;
            /**
             * Format: float
             * @example 2.891
             */
            goalsPerGame?: number;
            /**
             * Format: float
             * @example 2.745
             */
            goalsAgainstPerGame?: number;
            /**
             * Format: float
             * @example 0.8532
             */
            evGGARatio?: number;
            /** @example 23.9 */
            powerPlayPercentage?: string;
            /** @example 44 */
            powerPlayGoals?: number;
            /** @example 26 */
            powerPlayGoalsAgainst?: number;
            /** @example 184 */
            powerPlayOpportunities?: number;
            /** @example 84.6 */
            penaltyKillPercentage?: string;
            /**
             * Format: float
             * @example 32.8
             */
            shotsPerGame?: number;
            /**
             * Format: float
             * @example 30.2182
             */
            shotsAllowed?: number;
            /**
             * Format: float
             * @example 0.679
             */
            winScoreFirst?: number;
            /**
             * Format: float
             * @example 0.37
             */
            winOppScoreFirst?: number;
            /**
             * Format: float
             * @example 0.85
             */
            winLeadFirstPer?: number;
            /**
             * Format: float
             * @example 0.952
             */
            winLeadSecondPer?: number;
            /**
             * Format: float
             * @example 0.467
             */
            winOutshootOpp?: number;
            /**
             * Format: float
             * @example 0.6
             */
            winOutshotByOpp?: number;
            /** @example 3300 */
            faceOffsTaken?: number;
            /** @example 1675 */
            faceOffsWon?: number;
            /** @example 1625 */
            faceOffsLost?: number;
            /** @example 50.8 */
            faceOffWinPercentage?: string;
            /**
             * Format: float
             * @example 8.8
             */
            shootingPctg?: number;
            /**
             * Format: float
             * @example 0.909
             */
            savePctg?: number;
          };
          team?: {
            /** @example 28 */
            id?: number;
            /** @example San Jose Sharks */
            name?: string;
            /**
             * Format: uri
             * @example /api/v1/teams/28
             */
            link?: string;
          };
        }[];
      }[];
    };
    Venue: {
      /** @example SAP Center at San Jose */
      name?: string;
      /**
       * Format: uri
       * @example /api/v1/venues/null
       */
      link?: string;
      /** @example San Jose */
      city?: string;
      timeZone?: {
        /** @example America/Los_Angeles */
        id?: string;
        /** @example -8 */
        offset?: number;
        /** @example PST */
        tz?: string;
      };
    };
  };
  responses: {
    /** Error */
    Error: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
  };
  parameters: {
    /** @description The ID of the game. The first 4 digits identify the season of the game (ie. 2017 for the 2017-2018 season). The next 2 digits give the type of game, where 01 = preseason, 02 = regular season, 03 = playoffs, 04 = all-star. The final 4 digits identify the specific game number. For regular season and preseason games, this ranges from 0001 to the number of games played. (1271 for seasons with 31 teams (2017 and onwards) and 1230 for seasons with 30 teams). For playoff games, the 2nd digit of the specific number gives the round of the playoffs, the 3rd digit specifies the matchup, and the 4th digit specifies the game (out of 7). */
    gameId: number;
    /** @description The ID of the player. */
    playerId: number;
    /** @description Return data from a specific season. */
    season: number;
    /** @description Expand your response for some additional data. */
    teamExpand: "team.roster" | "team.schedule.next" | "team.schedule.previous";
  };
}

export interface operations {
  /** This only retrieves active conferences. For inactive conferences, use `/conferences/{id}`. */
  getConferences: {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Conferences"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  /** You can use this to also retrieve inactive conferences. For example, the ID for the World Cup of Hockey is `7`. */
  getConference: {
    parameters: {
      path: {
        /** The ID of the conference. */
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Division"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  /** This only retrieves active divisions. For inactive divisions, use `/divisions/{id}`. */
  getDivisions: {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Divisions"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  /** You can use this to also retrieve inactive divisions. For example, the ID for the old Patrick division is `13`. */
  getDivision: {
    parameters: {
      path: {
        /** The ID of the division. */
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Division"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getDraft: {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Draft"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getDraftByYear: {
    parameters: {
      path: {
        /** The draft year. */
        year: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Draft"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  /** Be forewarned that this endpoint returns a **lot** of data and there does not appear to be a way to paginate results. */
  getDraftProspects: {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["DraftProspects"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getDraftProspect: {
    parameters: {
      path: {
        /** The prospect ID. */
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["DraftProspects"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  /** If you want detailed play information, you should use `/game/{id}/feed/live` or `/game/{id}/feed/live/diffPatch`. */
  getGameBoxscore: {
    parameters: {
      path: {
        /** The ID of the game. The first 4 digits identify the season of the game (ie. 2017 for the 2017-2018 season). The next 2 digits give the type of game, where 01 = preseason, 02 = regular season, 03 = playoffs, 04 = all-star. The final 4 digits identify the specific game number. For regular season and preseason games, this ranges from 0001 to the number of games played. (1271 for seasons with 31 teams (2017 and onwards) and 1230 for seasons with 30 teams). For playoff games, the 2nd digit of the specific number gives the round of the playoffs, the 3rd digit specifies the matchup, and the 4th digit specifies the game (out of 7). */
        id: components["parameters"]["gameId"];
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["GameBoxscores"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getGameContent: {
    parameters: {
      path: {
        /** The ID of the game. The first 4 digits identify the season of the game (ie. 2017 for the 2017-2018 season). The next 2 digits give the type of game, where 01 = preseason, 02 = regular season, 03 = playoffs, 04 = all-star. The final 4 digits identify the specific game number. For regular season and preseason games, this ranges from 0001 to the number of games played. (1271 for seasons with 31 teams (2017 and onwards) and 1230 for seasons with 30 teams). For playoff games, the 2nd digit of the specific number gives the round of the playoffs, the 3rd digit specifies the matchup, and the 4th digit specifies the game (out of 7). */
        id: components["parameters"]["gameId"];
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["GameContent"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  /** This contains all data related to a game, from the boxscore, to play data and even on-ice coordinates. Be forewarned that, depending on the game, this endpoint can return a **lot** of data. */
  getGame: {
    parameters: {
      path: {
        /** The ID of the game. The first 4 digits identify the season of the game (ie. 2017 for the 2017-2018 season). The next 2 digits give the type of game, where 01 = preseason, 02 = regular season, 03 = playoffs, 04 = all-star. The final 4 digits identify the specific game number. For regular season and preseason games, this ranges from 0001 to the number of games played. (1271 for seasons with 31 teams (2017 and onwards) and 1230 for seasons with 30 teams). For playoff games, the 2nd digit of the specific number gives the round of the playoffs, the 3rd digit specifies the matchup, and the 4th digit specifies the game (out of 7). */
        id: components["parameters"]["gameId"];
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Game"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  /** You can use this to return a small subset of data relating to game. */
  getGameDiff: {
    parameters: {
      path: {
        /** The ID of the game. The first 4 digits identify the season of the game (ie. 2017 for the 2017-2018 season). The next 2 digits give the type of game, where 01 = preseason, 02 = regular season, 03 = playoffs, 04 = all-star. The final 4 digits identify the specific game number. For regular season and preseason games, this ranges from 0001 to the number of games played. (1271 for seasons with 31 teams (2017 and onwards) and 1230 for seasons with 30 teams). For playoff games, the 2nd digit of the specific number gives the round of the playoffs, the 3rd digit specifies the matchup, and the 4th digit specifies the game (out of 7). */
        id: components["parameters"]["gameId"];
      };
      query: {
        /** The prospect ID. */
        startTimeCode: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Game"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getPlayer: {
    parameters: {
      path: {
        /** The ID of the player. */
        id: components["parameters"]["playerId"];
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Players"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getPlayerStats: {
    parameters: {
      path: {
        /** The ID of the player. */
        id: components["parameters"]["playerId"];
      };
      query: {
        /**
         * Stats explanations:
         *   * `homeAndAway` - Provides a split between home and away games.
         *   * `byMonth` - Monthly split of stats.
         *   * `byDayOfWeek` - Split done by day of the week.
         *   * `goalsByGameSituation` - Shows number on when goals for a player happened like how many in the shootout, how many in each period, etc.
         *   * `onPaceRegularSeason` - This only works with the current in-progress season and shows projected totals based on current onPaceRegularSeason.
         *   * `regularSeasonStatRankings` - Returns where someone stands vs the rest of the league for a specific regularSeasonStatRankings
         *   * `statsSingleSeason` - Obtains single season statistics for a player.
         *   * `vsConference` - Conference stats split.
         *   * `vsDivision` - Division stats split.
         *   * `vsTeam` - Conference stats split.
         *   * `winLoss` - Very similar to the previous modifier except it provides the W/L/OT split instead of Home and Away.
         */
        stats:
          | "homeAndAway"
          | "byDayOfWeek"
          | "byMonth"
          | "goalsByGameSituation"
          | "onPaceRegularSeason"
          | "regularSeasonStatRankings"
          | "statsSingleSeason"
          | "vsConference"
          | "vsDivision"
          | "vsTeam"
          | "winLoss";
        /** Return data from a specific season. */
        season?: components["parameters"]["season"];
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerStats"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getSchedule: {
    parameters: {
      query: {
        /**
         * Expand explanations:
         *   * `schedule.brodcasts` - Shows the broadcasts of the game.
         *   * `schedule.linescore` - Linescore for completed games.
         *   * `schedule.ticket` - Provides the different places to buy tickets for the upcoming games.
         *   * `team.schedule.previous` - Same as above but for the last game played.
         */
        expand?:
          | "schedule.brodcasts"
          | "schedule.linescore"
          | "schedule.ticket"
          | "team.schedule.previous";
        /** Limit results to a specific team. Team ids can be found through the teams endpoint */
        teamId?: string;
        /** Start date for the search. */
        startDate?: string;
        /** End date for the search. */
        endDate?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Schedule"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getStandings: {
    parameters: {
      query: {
        /** Standings for a specified season. */
        season?: string;
        /** Standings on a specified date. */
        date?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Standings"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getStandingsByType: {
    parameters: {
      path: {
        /**
         * Standing types:
         *   * `byConference` - Standings by Conference
         *   * `byDivision` - Standings by Division
         *   * `byLeague` - Standings by League
         *   * `divisionLeaders` - Division Leader standings
         *   * `postseason` - Postseason Standings
         *   * `preseason` - Preseason Standings
         *   * `regularSeason` - Regular Season Standings
         *   * `wildCard` - Wild card standings
         *   * `wildCardWithLeaders` - Wild card standings with Division Leaders
         */
        type:
          | "byConference"
          | "byDivision"
          | "byLeague"
          | "divisionLeaders"
          | "postseason"
          | "preseason"
          | "regularSeason"
          | "wildCard"
          | "wildCardWithLeaders";
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Standings"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getStandingTypes: {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["StandingTypes"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getStatTypes: {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["StatTypes"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getTeams: {
    parameters: {
      query: {
        /** Expand your response for some additional data. */
        expand?: components["parameters"]["teamExpand"];
        /** Return data from a specific season. */
        season?: components["parameters"]["season"];
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Teams"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getTeam: {
    parameters: {
      path: {
        /** The ID of the team. */
        id: number;
      };
      query: {
        /** Expand your response for some additional data. */
        expand?: components["parameters"]["teamExpand"];
        /** Return data from a specific season. */
        season?: components["parameters"]["season"];
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Team"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getTeamRoster: {
    parameters: {
      path: {
        /** The ID of the team. */
        id: number;
      };
      query: {
        /** Return data from a specific season. */
        season?: components["parameters"]["season"];
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Rosters"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
  getTeamStats: {
    parameters: {
      path: {
        /** The ID of the team. */
        id: number;
      };
      query: {
        /** Return data from a specific season. */
        season?: components["parameters"]["season"];
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["TeamStats"];
        };
      };
      404: components["responses"]["Error"];
    };
  };
}

export interface external {}
