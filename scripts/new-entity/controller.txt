import { Body, Controller, Delete, Get, Patch, Path, Post, Route, Tags } from "tsoa"
import { DataSource } from "data/ormconfig"
import { Flat, uuid } from "./utilities/Types"
import { !NAME! } from "data/entities/!NAME!"

interface !NAME!Response extends Flat<!NAME!> {}

interface !NAME!PostBody extends Flat<Omit<!NAME!, "id">> {}

interface !NAME!PatchBody extends Flat<Omit<!NAME!, "id">> {}

@Route("!name!s")
@Tags("!NAME!")
export class !NAME!Controller extends Controller {
    private repository = DataSource.getRepository(!NAME!)

    @Get("{id}")
    public async get!NAME!(@Path() id: uuid): Promise<!NAME!Response> {
        return this.repository.findOneBy({ id: id })
    }

    @Get()
    public async list!NAME!s(): Promise<!NAME!Response[]> {
        return this.repository.find()
    }

    @Post()
    public async create!NAME!(@Body() body: !NAME!PostBody): Promise<!NAME!Response> {
        return await this.repository.save(body)
    }

    @Patch()
    public async update!NAME!(@Body() body: !NAME!PatchBody): Promise<!NAME!Response> {
        return await this.repository.save(body)
    }

    @Delete("{id}")
    public async delete!NAME!(@Path() id: uuid): Promise<void> {
        await this.repository.delete({ id: id })
    }
}